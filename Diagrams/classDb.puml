
@startuml classDb

class DatabaseManager {
  +serverData: ServerData
  +playerData: PlayerData
  +apiManager: ApiManager
  +GetServerData(): void
  +GetUserData(): void
  +IncreasePlayerLevel(): void
  +UpdateUserStats(): void
  +UpdateUserName(): void
}

class ServerData {
  +Dictionaries: List<DictionaryData>
  +Words: List<WordData>
  +Levels: List<LevelData>
  +LevelWords: List<LevelWordData>
}

class PlayerStats {
  +curlevel: int
  +score: int
}

class PlayerNameData {
  +name: String
}

class ApiManager {
  +apiClient: ApiClient
  +Fetch<T>(): void
  +Post<T>(): void
  +GetByUserId(): void
  +UpdatePlayerStats(): void
  +UpdatePlayerName(): void
  +Delete(): void
}

class ApiClient {
  +Get(): void
  +GetById(): void
  +GetByUserId(): void
  +Post(): void
  +Put(): void
  +Delete(): void
}

class DictionaryData {
  +id: int
  +name: String
}

class LevelData {
  +id: int
  +level: int
  +points: int
}

class WordData {
  +id: int
  +name: String
  +dictionaryid: int
}

class PlayerData {
  +id: int
  +userid: String
  +name: String
  +curlevel: int
  +score: int
}

class LevelWordData {
  +id: int
  +levelid: int
  +wordid: int
}

ApiManager --> ApiClient
DatabaseManager --> ApiManager
DatabaseManager --> ServerData
DatabaseManager --> PlayerData
DatabaseManager ..> PlayerStats
DatabaseManager ..> PlayerNameData

ServerData --> DictionaryData
ServerData --> WordData
ServerData --> LevelData
ServerData --> LevelWordData


@enduml
